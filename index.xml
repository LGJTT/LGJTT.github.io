<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>终是庄周梦了蝶</title>
    <link>http://LGJTT.github.io/</link>
    <description>Recent content on 终是庄周梦了蝶</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 18 Jan 2021 20:26:11 +0800</lastBuildDate><atom:link href="http://LGJTT.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>二叉树</title>
      <link>http://LGJTT.github.io/post/%E4%BA%8C%E5%8F%89%E6%A0%91/</link>
      <pubDate>Mon, 18 Jan 2021 20:26:11 +0800</pubDate>
      
      <guid>http://LGJTT.github.io/post/%E4%BA%8C%E5%8F%89%E6%A0%91/</guid>
      <description>1.二叉树的遍历： 1.1 前序遍历(访问顺序：root , root-&amp;gt;left , root-&amp;gt;right) 题目(力扣144)：给你二叉树的根节点 root ，返回它节点值的 前序 遍历。
class Solution { public: void preorder(TreeNode* root,vector&amp;lt;int&amp;gt;&amp;amp; nums){ //模板...  if(root!=nullptr){ nums.push_back(root-&amp;gt;val); preorder(root-&amp;gt;left,nums); preorder(root-&amp;gt;right,nums); } } vector&amp;lt;int&amp;gt; preorderTraversal(TreeNode* root) { auto nums=vector&amp;lt;int&amp;gt;(); preorder(root,nums); return nums; } }; 1.2 中序遍历（访问顺序：root-&amp;gt;left , root , root-&amp;gt;right) 只需将前序遍历中的模板改为：
if(root!=nullptr){ inorder(root-&amp;gt;left,nums); nums.push_back(root-&amp;gt;val); inorder(root-&amp;gt;right,nums); } 1.3 后序遍历 （访问顺序：root-&amp;gt;left , root-&amp;gt;right , root) 同样的只需要将前序遍历中的模板改为：
if(root!=nullptr){ postorder(root-&amp;gt;left,nums); postorder(root-&amp;gt;right,nums); nums.push_back(root-&amp;gt;val); } 2.二叉树的层次遍历 题目（力扣107): 给定一个二叉树，返回其节点值自底向上的层序遍历(即按从叶子节点所在层到根节点所在的层，逐层从左向右遍历)。
解析：树的层次遍历可以使用广度优先搜索实现。从根节点开始搜索，每次遍历同一层的全部节点，使用一个列表存储该层的节点值。
class Solution { public: vector&amp;lt;vector&amp;lt;int&amp;gt;&amp;gt; levelOrderBottom(TreeNode* root) { auto levelOrder = vector&amp;lt;vector&amp;lt;int&amp;gt;&amp;gt;(); if (!</description>
    </item>
    
    <item>
      <title>萌新开工</title>
      <link>http://LGJTT.github.io/post/third/</link>
      <pubDate>Mon, 18 Jan 2021 00:04:48 +0800</pubDate>
      
      <guid>http://LGJTT.github.io/post/third/</guid>
      <description>#include&amp;lt;iostream&amp;gt;using namespace std; int main(){ cout&amp;lt;&amp;lt;&amp;#34;hello world!&amp;#34;&amp;lt;&amp;lt;endl; } </description>
    </item>
    
    <item>
      <title>About me</title>
      <link>http://LGJTT.github.io/about/</link>
      <pubDate>Sun, 17 Jan 2021 23:26:29 +0800</pubDate>
      
      <guid>http://LGJTT.github.io/about/</guid>
      <description>​ Name: 李国杰（GuoJie Li)
Personalized Signature: 我不和谁争，谁和我争，我也不屑。我热爱自然，其次是艺术。我用生命之火，烤着双手。火萎了，我也该走了。</description>
    </item>
    
  </channel>
</rss>
